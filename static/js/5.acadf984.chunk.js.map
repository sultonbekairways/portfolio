{"version":3,"sources":["../node_modules/swiper/esm/components/effect-coverflow/effect-coverflow.js","components/Queotes.tsx"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","Coverflow","setTranslate","swiper","swiperWidth","width","swiperHeight","height","slides","slidesSizesGrid","params","coverflowEffect","isHorizontal","transform","translate","center","rotate","depth","$slideEl","eq","slideSize","offsetMultiplier","swiperSlideOffset","modifier","rotateY","rotateX","translateZ","Math","abs","stretch","indexOf","parseFloat","translateY","translateX","scale","slideTransform","style","zIndex","round","slideShadows","$shadowBeforeEl","find","$shadowAfterEl","$","append","opacity","setTransition","duration","transition","name","create","bindModuleMethods","on","beforeInit","effect","classNames","push","containerModifierClass","watchSlidesProgress","originalParams","Queotes","grabCursor","centeredSlides","slidesPerView","loop","pagination","className","Array","fill","map","_","src","alt","loading","SwiperCore","use","EffectCoverflow","Pagination"],"mappings":"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","file":"static/js/5.acadf984.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport $ from '../../utils/dom';\nimport { bindModuleMethods } from '../../utils/utils';\nvar Coverflow = {\n  setTranslate: function setTranslate() {\n    var swiper = this;\n    var swiperWidth = swiper.width,\n        swiperHeight = swiper.height,\n        slides = swiper.slides,\n        slidesSizesGrid = swiper.slidesSizesGrid;\n    var params = swiper.params.coverflowEffect;\n    var isHorizontal = swiper.isHorizontal();\n    var transform = swiper.translate;\n    var center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\n    var rotate = isHorizontal ? params.rotate : -params.rotate;\n    var translate = params.depth; // Each slide offset from center\n\n    for (var i = 0, length = slides.length; i < length; i += 1) {\n      var $slideEl = slides.eq(i);\n      var slideSize = slidesSizesGrid[i];\n      var slideOffset = $slideEl[0].swiperSlideOffset;\n      var offsetMultiplier = (center - slideOffset - slideSize / 2) / slideSize * params.modifier;\n      var rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      var rotateX = isHorizontal ? 0 : rotate * offsetMultiplier; // var rotateZ = 0\n\n      var translateZ = -translate * Math.abs(offsetMultiplier);\n      var stretch = params.stretch; // Allow percentage to make a relative stretch for responsive sliders\n\n      if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\n        stretch = parseFloat(params.stretch) / 100 * slideSize;\n      }\n\n      var translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\n      var translateX = isHorizontal ? stretch * offsetMultiplier : 0;\n      var scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier); // Fix for ultra small values\n\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n      if (Math.abs(scale) < 0.001) scale = 0;\n      var slideTransform = \"translate3d(\" + translateX + \"px,\" + translateY + \"px,\" + translateZ + \"px)  rotateX(\" + rotateX + \"deg) rotateY(\" + rotateY + \"deg) scale(\" + scale + \")\";\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n\n      if (params.slideShadows) {\n        // Set shadows\n        var $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        var $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'left' : 'top') + \"\\\"></div>\");\n          $slideEl.append($shadowBeforeEl);\n        }\n\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'right' : 'bottom') + \"\\\"></div>\");\n          $slideEl.append($shadowAfterEl);\n        }\n\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\n      }\n    }\n  },\n  setTransition: function setTransition(duration) {\n    var swiper = this;\n    swiper.slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n  }\n};\nexport default {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      scale: 1,\n      modifier: 1,\n      slideShadows: true\n    }\n  },\n  create: function create() {\n    var swiper = this;\n    bindModuleMethods(swiper, {\n      coverflowEffect: _extends({}, Coverflow)\n    });\n  },\n  on: {\n    beforeInit: function beforeInit(swiper) {\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.classNames.push(swiper.params.containerModifierClass + \"coverflow\");\n      swiper.classNames.push(swiper.params.containerModifierClass + \"3d\");\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate: function setTranslate(swiper) {\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition: function setTransition(swiper, duration) {\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    }\n  }\n};","import React from \"react\";\r\n// Import Swiper React components\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\n\r\n// Import Swiper styles\r\nimport \"swiper/swiper.min.css\";\r\nimport \"swiper/components/effect-coverflow/effect-coverflow.min.css\";\r\nimport \"swiper/components/pagination/pagination.min.css\";\r\n\r\n// import Swiper core and required modules\r\nimport SwiperCore, { EffectCoverflow, Pagination } from \"swiper/core\";\r\n\r\n// install Swiper modules\r\nSwiperCore.use([EffectCoverflow, Pagination]);\r\n\r\nexport default function Queotes() {\r\n  return (\r\n    <>\r\n      <Swiper\r\n        effect={\"coverflow\"}\r\n        grabCursor={true}\r\n        centeredSlides={true}\r\n        slidesPerView={\"auto\"}\r\n        loop={true}\r\n        coverflowEffect={{\r\n          rotate: 50,\r\n          stretch: 0,\r\n          depth: 100,\r\n          modifier: 1,\r\n          slideShadows: true,\r\n        }}\r\n        pagination={true}\r\n        className=\"mySwiper\"\r\n      >\r\n        {Array(25)\r\n          .fill(null)\r\n          .map((_, i) => (\r\n            <SwiperSlide key={`quote${i}`}>\r\n              <img src={`/static/quotes/q${i}.jpg`} alt=\"quotes\" loading=\"lazy\"/>\r\n            </SwiperSlide>\r\n          ))}\r\n      </Swiper>\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}